#!/usr/bin/env zsh

# Configure tools
# -------------------------------------------------------------------------------------------------

# Compinit
autoload -U compinit && compinit

# AWS
autoload bashcompinit
bashcompinit

# Python pipx
autoload -U bashcompinit
bashcompinit
eval "$(register-python-argcomplete pipx)"

# Load custom functions and aliases
source "${HOME}/.zfunctions"
source "${HOME}/.zaliases"

# Load plugins
# -------------------------------------------------------------------------------------------------

# Load zi
source ${HOME}/.zi/bin/zi.zsh
autoload -Uz _zi
(( ${+_comps} )) && _comps[zi]=_zi

# Load a few important annexes, without Turbo
zi light-mode for \
  z-shell/z-a-patch-dl \
  z-shell/z-a-bin-gem-node

# Load a few important annexes, without Turbo
zi light-mode for \
  z-shell/z-a-patch-dl \
  z-shell/z-a-bin-gem-node


# Oh-my-zsh configs that I want
zi snippet "OMZ::lib/completion.zsh"
zi snippet "OMZ::lib/history.zsh"
zi snippet "OMZ::lib/key-bindings.zsh"
zi snippet "OMZ::lib/theme-and-appearance.zsh"
zi snippet "OMZ::lib/spectrum.zsh"
zi snippet "OMZ::plugins/git/git.plugin.zsh"
zi snippet "OMZ::plugins/git-extras/git-extras.plugin.zsh"
zi snippet "OMZ::plugins/dotenv/dotenv.plugin.zsh"
zi snippet "OMZ::plugins/fzf/fzf.plugin.zsh"

# # Improving ZSH usage
zi light "chrissicool/zsh-256color"
zi light "rupa/z"
zi light "djui/alias-tips"
zi light "supercrabtree/k"
zi light "zsh-users/zsh-autosuggestions"
zi light "zsh-users/zsh-syntax-highlighting"
zi light "zsh-users/zsh-history-substring-search"
zi light "Tarrasch/zsh-bd"
zi light "changyuheng/zsh-interactive-cd"
zi light "shannonmoeller/up"
zi light "Aloxaf/fzf-tab"
zi light "changyuheng/fz"

zi cdreplay -q

# Post-plugin hook
# -------------------------------------------------------------------------------------------------

# FZF-TAB
zstyle ':fzf-tab:complete:*' fzf-preview '
echo word: $word
echo description: $desc
(( $+ctxt[group] )) && echo group: $group
(( $+ctxt[isfile] )) && echo path: $realpath
'

zstyle ':fzf-tab:complete:cat:argument-rest' fzf-preview '[[ $(file --mime-type $realpath) == *"text/"* ]] && cat $realpath'

# Load Starship
eval "$(starship init zsh)"

# Start Zellij
if [[ -z "$ZELLIJ" && -z "$TERMINAL_EMULATOR" ]]; then
  if [[ "$ZELLIJ_AUTO_ATTACH" == "true" ]]; then
    zellij attach -c
  else
    zellij
  fi

  if [[ "$ZELLIJ_AUTO_EXIT" == "true" ]]; then
    exit
  fi
fi
